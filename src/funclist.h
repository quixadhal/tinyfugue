/*************************************************************************
 *  TinyFugue - programmable mud client
 *  Copyright (C) 1996, 1997, 1998, 1999, 2002, 2003 Ken Keys
 *
 *  TinyFugue (aka "tf") is protected under the terms of the GNU
 *  General Public License.  See the file "COPYING" for details.
 ************************************************************************/
/* $Id: funclist.h,v 35000.48 2003/05/27 01:09:22 hawkeye Exp $ */

/* sorted by name */
/*	  Symbol	Name		Pure	Min	Max	*/
/*					(!used)	Args	Args	*/

funccode( FN_ABS,	"abs",		1,	1,	1),
funccode( FN_ACOS,	"acos",		1,	1,	1),
funccode( FN_ADDWORLD,	"addworld",	0,	2,	9),
funccode( FN_ASCII,	"ascii",	1,	1,	1),
funccode( FN_ASIN,	"asin",		1,	1,	1),
funccode( FN_ATAN,	"atan",		1,	1,	1),
funccode( FN_CHAR,	"char",		1,	1,	1),
funccode( FN_COLUMNS,	"columns",	0,	0,	0),
funccode( FN_COS,	"cos",		1,	1,	1),
funccode( FN_CPUTIME,	"cputime",	0,	0,	0),
funccode( FN_ECHO,	"echo",		0,	1,	4),
funccode( FN_EXP,	"exp",		1,	1,	1),
funccode( FN_FAKE_RECV,	"fake_recv",	0,	1,	3),
funccode( FN_FG_WORLD,	"fg_world",	0,	0,	0),
funccode( FN_FILENAME,	"filename",	0,	1,	1),
funccode( FN_FTIME,	"ftime",	0,	0,	2),
funccode( FN_FWRITE,	"fwrite",	0,	2,	2),
funccode( FN_GETOPTS,	"getopts",	0,	1,	2),
funccode( FN_GETPID,	"getpid",	1,	0,	0),
funccode( FN_IDLE,	"idle",		0,	0,	1),
funccode( FN_INLINE,	"inline_attr",	1,	1,	2),
funccode( FN_IS_CONN,	"is_connected",	0,	0,	1),
funccode( FN_IS_OPEN,	"is_open",	0,	0,	1),
funccode( FN_ISATTY,	"isatty",	1,	0,	0),
funccode( FN_KBDEL,	"kbdel",	0,	1,	1),
funccode( FN_KBGOTO,	"kbgoto",	0,	1,	1),
funccode( FN_KBHEAD,	"kbhead",	0,	0,	0),
funccode( FN_KBLEN,	"kblen",	0,	0,	0),
funccode( FN_KBMATCH,	"kbmatch",	0,	0,	1),
funccode( FN_KBPOINT,	"kbpoint",	0,	0,	0),
funccode( FN_KBTAIL,	"kbtail",	0,	0,	0),
funccode( FN_KBWLEFT,	"kbwordleft",	0,	0,	1),
funccode( FN_KBWRIGHT,	"kbwordright",	0,	0,	1),
funccode( FN_KEYCODE,	"keycode",	0,	1,	1),
funccode( FN_LINES,	"lines",	1,	0,	0),
funccode( FN_LN,	"ln",		1,	1,	1),
funccode( FN_LOG10,	"log10",	1,	1,	1),
funccode( FN_MKTIME,	"mktime",	0,	1,	7), /* !pure: uses TZ */
funccode( FN_MOD,	"mod",		1,	2,	2),
funccode( FN_MORESCROLL,"morescroll",	0,	1,	1),
funccode( FN_MORESIZE,	"moresize",	0,	0,	1),
funccode( FN_NACTIVE,	"nactive",	0,	0,	1),
funccode( FN_NLOG,	"nlog",		0,	0,	0),
funccode( FN_NMAIL,	"nmail",	0,	0,	0),
funccode( FN_NREAD,	"nread",	0,	0,	0),
funccode( FN_PAD,	"pad",		1,	1,	(unsigned)-1),
funccode( FN_POW,	"pow",		1,	2,	2),
funccode( FN_RAND,	"rand",		0,	0,	2),
funccode( FN_READ,	"read",		0,	0,	0),
funccode( FN_REGMATCH,	"regmatch",	0,	2,	2), /* !pure: sets Pn */
funccode( FN_REPLACE,	"replace",	1,	3,	3),
funccode( FN_SEND,	"send",		0,	1,	3),
funccode( FN_SIDLE,	"sidle",	0,	0,	1),
funccode( FN_SIN,	"sin",		1,	1,	1),
funccode( FN_SQRT,	"sqrt",		1,	1,	1),
funccode( FN_STRCAT,	"strcat",	1,	1,	(unsigned)-1),
funccode( FN_STRCHR,	"strchr",	1,	2,	3),
funccode( FN_STRCMP,	"strcmp",	1,	2,	2),
funccode( FN_STRLEN,	"strlen",	1,	1,	1),
funccode( FN_STRNCMP,	"strncmp",	1,	3,	3),
funccode( FN_STRRCHR,	"strrchr",	1,	2,	3),
funccode( FN_STRREP,	"strrep",	1,	2,	2),
funccode( FN_STRSTR,	"strstr",	1,	2,	3),
funccode( FN_SUBSTITUTE,"substitute",	1,	1,	3),
funccode( FN_SUBSTR,	"substr",	1,	2,	3),
funccode( FN_SYSTYPE,	"systype",	1,	0,	0),
funccode( FN_TAN,	"tan",		1,	1,	1),
funccode( FN_TFCLOSE,	"tfclose",	0,	1,	1),
funccode( FN_TFFLUSH,	"tfflush",	0,	1,	2),
funccode( FN_TFOPEN,	"tfopen",	0,	0,	2),
funccode( FN_TFREAD,	"tfread",	0,	1,	2),
funccode( FN_TFWRITE,	"tfwrite",	0,	1,	2),
funccode( FN_TIME,	"time",		0,	0,	0),
funccode( FN_TOLOWER,	"tolower",	1,	1,	2),
funccode( FN_TOUPPER,	"toupper",	1,	1,	2),
funccode( FN_TRUNC,	"trunc",	1,	1,	1),
funccode( FN_WHATIS,	"whatis",	1,	1,	1),
funccode( FN_WINLINES,	"winlines",	1,	0,	0),
funccode( FN_WORLDINFO,	"world_info",	0,	0,	2)
